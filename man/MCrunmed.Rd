% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MCrumned.R
\name{MCrunmed}
\alias{MCrunmed}
\title{Monte Carlo Simulation of Running Median}
\usage{
MCrunmed(x0, x1, y, k = 51, N = 100, blur = 0)
}
\arguments{
\item{x0}{Numeric vector. The lower bounds of the uniform distribution for chronological data.}

\item{x1}{Numeric vector. The upper bounds of the uniform distribution for chronological data.}

\item{y}{Numeric vector. The response variable for which the running median will be calculated.}

\item{k}{Integer. Width of the running median window. Default is 51.}

\item{N}{Integer. Number of Monte Carlo simulations. Default is 100.}

\item{blur}{Numeric. Standard deviation of additional Gaussian noise (as a fraction of the range in \code{x0} and \code{x1}). Default is 0.}
}
\value{
A list of matrices, where each matrix contains two columns:
\itemize{
\item The first column: Simulated chronological data.
\item The second column: Running median of the response variable.
}
}
\description{
This function performs Monte Carlo simulations by drawing random values from a
uniform distribution (for chronological data) and computes the running median
of a response variable. The results are stored in a list of matrices.
}
\details{
This function generates simulated chronological data (\code{X}) by drawing random values
from a uniform distribution defined by \code{x0} and \code{x1}. Optionally, Gaussian noise
(controlled by \code{blur}) can be added to the simulated data. The response variable (\code{y})
is then reordered according to the simulated chronological data, and the running median
is computed using a sliding window of size \code{k}. The results are returned as a list of
\code{N} simulations.
}
\note{
Ensure that \code{x0}, \code{x1}, and \code{y} are of the same length. The function assumes the
input chronological bounds (\code{x0}, \code{x1}) and response variable (\code{y}) are appropriately paired.
}
\examples{
# Example data
x0 <- c(-5010, -5110, -5350) # from
x1 <- c(-5000, -5100, -5200) # to
y <- c(0.2, 0.7, 0.9)

# Perform Monte Carlo simulation
result <- MCrunmed(x0, x1, y, k = 3, N = 10, blur = 0.1)

# Access the first simulation
head(result[[1]])

}
\seealso{
\code{\link{MCr.as.MCd}}
}
